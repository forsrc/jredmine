apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jredmine-ui
  name: jredmine-ui
  namespace: jredmine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jredmine-ui
  strategy: {}
  template:
    metadata:
      labels:
        app: jredmine-ui
      # annotations:
      #   co.elastic.logs/enabled: "true"
      #   co.elastic.logs.json-logging/json.keys_under_root: "true"
      #   co.elastic.logs.json-logging/json.add_error_key: "true"
      #   co.elastic.logs.json-logging/json.message_key: "message"
    spec:
      containers:
      - image: forsrc/jredmine:ui
        name: jredmine-ui
        ports:
        - containerPort: 80
        imagePullPolicy: IfNotPresent #Always
        resources: {}
        env:
        - name: MY_PROFILE
          value: k8s
        - name: SERVER_URL
          value: http://jredmine-server.forsrc.org
        livenessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /index.html
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      initContainers:
      - name: init-waiting
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z jredmine-server 8080; do echo waiting for jredmine-server 8080; sleep 2; done;']

---

apiVersion: v1
kind: Service
metadata:
  name: jredmine-ui
  namespace: jredmine
spec:
  selector:
    app: jredmine-ui
  ports:
  - port: 80
    targetPort: 80
    name: jredmine-ui
  type: ClusterIP